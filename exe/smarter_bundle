#!/usr/bin/env ruby

require 'fileutils'

class SmartBundle

  attr_reader :lines
  attr_reader :exit_status

  def attempt_bundle_install(bundle_arg)
    @lines = []
    cmd = "bundle #{bundle_arg}"
    puts '-'*50,"Running: #{cmd}"
    IO.popen("#{cmd} 2>&1") do |io|
      while line = io.gets
        puts line.chomp
        @lines << line.chomp
      end
      io.close
      @exit_status = $?.to_i
    end
    puts '-'*50
    return @exit_status == 0
  end

  def find_remedy
    ruby_bound_gems = {}
    @lines.each do |line|
      if line =~ / (\S+) requires Ruby version /
        puts "Found ruby version issue with #{$1}"
        ruby_bound_gems[$1] = true
      end
      if line =~ /An error occurred while installing (\S+) \((\S+)\),/
        if ruby_bound_gems[$1]
          puts "Determined gem version #{$1}: #{$2}"
          return [$1, "< #{$2}"]
        else
          puts "ABORTED: Unable to fix error: #{line}"
        end
      end
    end
    return nil
  end

  def apply_remedy(remedy)
    return nil unless remedy
    filename = ENV['BUNDLE_GEMFILE'] || 'Gemfile'
    gem_name = remedy.first
    gem_version = remedy.last
    File.open("#{filename}.new", 'w') do |file|
      File.open(filename, 'r').each do |line|
        if gem_name && (line =~ /^\s*gem\s+['"]#{gem_name}['"](.*)/)
          rest_of_line = $1
          if rest_of_line !~ /^, ['"]#{gem_version}['"](.*)/
            rest_of_line = $2.sub(/#.*/, '')
            puts '',"ADD THIS TO #{filename} PERMANENTLY!!","gem '#{gem_name}', '#{gem_version}'#{rest_of_line}  # SmartBundle: Save this fix into the Gemfile permanently!"
            file.puts "gem '#{gem_name}', '#{gem_version}'#{rest_of_line}  # REQUIRED # SmartBundle: Save this fix into the Gemfile permanently!"
            gem_name = nil
          else
            puts "ABORTED: The version hasn't changed - unable to determine next adjustment!"
            FileUtils.rm_f "#{filename}.new"
            exit 3
          end
        else
          file.print line
        end
      end
      if gem_name
        puts '',"ADD THIS TO #{filename} PERMANENTLY!!","gem '#{gem_name}', '#{gem_version}'  # SmartBundle: Save this fix into the Gemfile permanently!"
        file.puts "gem '#{gem_name}', '#{gem_version}'  # REQUIRED # SmartBundle: Save this fix into the Gemfile permanently!"
        gem_name = nil
      end
    end
    FileUtils.move "#{filename}.new", filename, :force => true
    return gem_name.nil?
  end

  def run(bundle_arg)
    n = 0
    while ! attempt_bundle_install(bundle_arg)
      n += 1
      if n > 100
        puts "ABORTED: #{n} attempts to fix Gemfile have failed!"
        exit 4
      end
      puts "Bundle #{bundle_arg} failed!"
      remedy = find_remedy
      puts "Found remedy: #{remedy.inspect}"
      if apply_remedy(remedy)
        puts "Applied remedy: #{remedy.inspect}"
      else
        puts "ABORTED: Unable to find a suggested remedy!"
        exit
      end
    end

  end
end

bundle_args = ARGV.join(' ')
SmartBundle.new.run bundle_args

